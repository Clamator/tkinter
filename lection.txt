цвет фона - # background colour
win.config(bg='#ABCDEF')

есть такая тема как виджеты, это одна из основных важных вещей

1. первый виджет - лэйбл. он необходим для для отображения текстовой инфы в окно, его можно создавать через переменную,
хотя это не обязательно. Создание происходит через обращение к модулю Ткинтера, поэтому его надо испортить под
определенным именем. Обращение происходит не к классу, обязательно в виджете надо указывать, на какой окне он будет
располагаться

лэйбл, да и много остальное, мало создать, его еще надо расположить на окне

# anchor позволяет прилепить текст к указанному направлению
anchor='nw'

у лэйбла можно увидеть границы
делается так: relief = tk.RAISED, появится граница,по умолчанию два пикселя, но ее можно расширить через bd=

есть выравнивание текста через justify=tk.LEFT, в данном случае выравнивание идет по левой стороне

info = open('lection.txt', 'r', encoding='utf-8')
label_1 = tk.Label(win, text=info.read(),
                   bg='black',
                   fg='white',
                   font=('Times new roman', 10, 'bold'),
                   #padx=10, # указывается в пикселях, отступ от края текста до границ лэйбла
                   #pady=10,
                   #width=130,# указывается в символах, при изменении этих параметров текст всегда остается в серединке
                   #height=10,
                    # anchor позволяет прилепить текст к указанному направлению
                   anchor='nw',
                   relief = tk.RAISED,
                   bd=4,
                   justify=tk.LEFT,

                   )
label_1.pack()

2. виджет кнопка
можно открывать новое окно

def open_new_window():
    win2 = tk.Tk()
    win2.title('another one window')
    win2.geometry('1000x600+500+300')
    win2.mainloop()
    #label2 = tk.Label(win2, text='new window has been opened')
    #label2.pack()

open_new_window = tk.Button(
    win, text='new window',
    command=open_new_window,
)

open_new_window.pack()

можно создавать новые лейблы, которые выводят текст в окне, без pack() он будет выводить в консоль:

def add_label():
    label = tk.Label(win, text='text')
    label.pack() # размещает текст непосредственно в окне

можно делать лямбда ф-и без создания

офтоп - размещение виджетов
есть метод раск, он просто выводит кнопку на экран, а есть метод grid, с его помощью мы можем влиять на размещение кнопок
виджеты идут в виде таблички, а если не влиять на их положение, то они будут идти в виде столбика

btn1 = tk.Button(win, text='btn1')
btn2 = tk.Button(win, text='button 2')
btn3 = tk.Button(win, text='btn3')
btn4 = tk.Button(win, text='btn4')
btn5 = tk.Button(win, text='btn5')
btn6 = tk.Button(win, text='btn6')

btn1.grid(row=0, column=0)
btn2.grid(row=0, column=1)
btn5.grid(row=1, column=0)
btn6.grid(row=1, column=1, stick='we') - стик - это растянуть кнопку, спан - это сколько строк\колонок занять этой кнопке
btn3.grid(row=2, column=0, columnspan=2, stick='we')
btn4.grid(row=0, column=2, rowspan=2, stick='ns')

кнопки можно создавать и в цикле

3. виджет entry
используется для ввода текстовой информации в окно
энтри просто создает поле для ввода, а чтобы получить инфу есть несколько вариантов,
1. - создать кнопку
tk.Button(win, text='get', command=get_entry)
напоминаю сам себе, что у кнопки есть command - что она должна делать, какую ф-ю вызывать,
кнопку так же надо располагать, ну есесно
сама кнопка
tk.Button(win, text='get', command=get_entry).grid(row=0, column=2, rowspan=2, stick='ns')

def get_entry():
    value1 = name1.get()
        if value1:
        print(value1)
    else:
        print('empty line')

обязательно дб get на вводимом поле,

само значение можно удалять, кнопка создается таким же способом, однако в этом методе уже надо
указать, с какого элемента производим удаление, я поставил 0, то есть он будет всегда удалять
нулевой элемент, первый в очереди. Чтобы удалить все элементы, надо вторым элементом указать
'end' или константу tk.END, что одно и то же

кроме получения и удаления инфы есть метод вставки - insert, по аналогии со списками
он принимает два параметра, это куда и что мы вставляем
tk.Button(win, text='insert', command=lambda: password.insert(0, 'world')).grid(row=1, column=4)

вставляемый или вводимый текст можно скрыть, для этого надо непосредственно в создаваемом энтри,
а не в кнопке - tk.Entry(win, show=False), тогда заменяется нулями, или просто show='●'

4. есть такой метод как bind - обработчик событий, мы можем привязать то или иное событие и написать к нему обработчик
то есть наше окно будет ждать, пока это событие произойдет, и когда оно произойдет, сработает колбэк ф-я, обработчик